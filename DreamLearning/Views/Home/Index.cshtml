@using DreamLearning.Models
@using DreamLearning.Dto
@model TransData
@{
    ViewBag.Title = "Home Page";

    string key = System.Web.Configuration.WebConfigurationManager.AppSettings["googleMaps"];

}
<div class="container-fluid h-100" style="position:relative; top: 50px; ">
    <div class="row mh-100">
        <div class="col-4 border-right p-2">
            <div class="row">
                <div class="col-12">
                    <form class="form-inline">
                        <div class="form-group w-75 pr-1">

                            <input type="search"
                                   class="form-control w-100"
                                   id="inputSearch"
                                   placeholder="Search">
                        </div>
                    </form>
                </div>
                <div class="col-12 h-100">
                    <ul id="addressList" class="list-group" style="max-height: 85vh; overflow: auto; position:relative; top:15px;" ></ul>
                </div>
            </div>
        </div>
        <div class="col-8 w-50 p-0 m-0">
            <div id="map" style="height: 500px; width:882px; background-color:rebeccapurple; color:azure; font-family:Verdana; font-size:30px" class="jumbotron-fluid w-100">Carregando ...</div>
        </div>
    </div>

    <script src="https://maps.googleapis.com/maps/api/js?key=@key&libraries=places"></script>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/Main/Index.js"></script>
    <script src="~/Scripts/Main/Builders.js"></script>
    <script>
        var getData = function (place, coord) {
            var coordinate = coord;
            placesRecive = place; 
        $.ajax({
            url: "@Url.Action("GetAllData","Home" )",
            type: "POST",
            dataType: "html",
            data: { coordinate }
        }).done(function (resp) {
               $("li").remove(); 
         
            let response = JSON.parse(resp);
            points = response.Points
            addresses = response.Addresses;
            schools = response.Schools
            let aux = points.slice(0, 10)
            console.log(aux);
            aux.map((point) => {
                schools.map((school) => {
                    if (school.Inep === point.Inep) {
                        subArraySchools.push(school);
                    }
                });
            });

            makeMarkers(aux);
        }).catch(error => {
            console.log(error)
            alert("Não foi possível encontrar as informações requisitadas. ");
            return;
        });
        }

    </script>
    
    <div class="gcse-searchresults-only"></div>
        

</div>
